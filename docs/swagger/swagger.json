{
  "openapi": "3.0.3",
  "info": {
    "description": "[Home](../../) | [Getting started](../getting-started.html) | [Postman](../postman.html) | [Swagger](#/)  <br /><br />Tax Agile provides the powerful VAT Calc determination engine over a RESTful API. The API requires an Account ID and API Key for the auth endpoint; please [contact us](https://www.vatcalc.com/contact/) if you would like a demo and access. <br /> <br />Find out more about our products on our website [vatcalc.com](https://www.vatcalc.com/) <br /><br />If you have access, but run into any issues [create an issue](https://github.com/taxagile/developer-hub/issues)",
    "title": "Tax Agile API Specification",
    "version": "1.0.1"

  },
  "servers": [
    {
      "url": "https://test-api.taxagile.io/v1",
      "description": "Test API"
    },
    {
      "url": "https://api.taxagile.io/v1",
      "description": "Production API"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "tags": [ "Authentication" ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expiresIn": {
                      "example": 86400,
                      "description": "The time in seconds before the token is expired and can no longer be used",
                      "type": "number"
                    },
                    "accessToken": {
                      "description": "Use this token on subsequent API requests in the authorization header with the format 'Bearer <token>'",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50SWQiOiJERU1PIiwiaWF0IjoxNjUzMDU3MjU2LCJleHAiOjE2NTMxNDM2NTZ9.bSMQE3mRHL0LGl9Fpn3rl8wJkvQC7WN9N-U7ikwaavQ",
                      "type": "string"
                    },
                    "tokenType": {
                      "type": "string",
                      "example": "Bearer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "SV001",
                  "message": "JSON schema validation failed: must NOT have fewer than 1 characters in: accountId"
                },
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized",
                  "errorCode": "AU001"
                },
                "schema": {
                  "$ref": "#/components/schemas/errorResponse",
                }
              }
            }
          }
        },
        "summary": "Authenticate with API Key to receive a Bearer token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/authSchemaRequestBody"
              }
            }
          },
          "description": ""
        }
      }
    },
    "/determination/vat/transactions": {
      "post": {
        "summary": "Send a transaction and receive a VAT determination.",
        "description": "Send a transaction to the determination engine for VAT. The request body supports a large number of conditions which may be true on your transaction, but all are not required. It can be helpful to use VAT Advisor to enter a sample transaction to understand the request body you need to send. The transaction can be stored if you include the query parameter commit=true if stored, the response will provide a uuid.",
        "requestBody": {
          "required": true,
          "description": "The payload body requires a JSON object which represents the transaction. If fields are missing, the API will return a response object with context enriched guidance on how to correct the request. Then the caller can resend an updated transaction",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/determinationVatRequestBody"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "commit",
            "description": "Optional, defaults to false; if true the transaction is stored and a unique id is provided in the response.",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/determinationVatResponse200"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "VD003",
                  "message": "Missing field: date.docDate | Hint: What is the date of the document?"
                },
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad request - missing fields"
          },
          "401": {
            "description": "Unauthorized - invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "AU001",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "tags": [ "VAT determination" ]
      },
      "get":{
        "summary": "Fetch a collection of transactions with filter params",
        "description": "Returns a paginated dataset of the committed (saved) transactions stored on the platform. Takes filter criteria as query parameters and sets defaults to ensure a huge dataset is not fetched.  Can be used to collect data periodically to store in your analysis data store; or to build an interactive dashboard in your application.",
        "parameters": [
          {
            "name": "entryDateTimeFrom",
            "in": "query",
            "description": "Datetime stamp in UTC ISO string format from which to select transactions to return. Optional, if not provided it defaults to current date time -30 days.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"2022-06-28T00:00:00.000Z"
          },
          {
            "name": "entryDateTimeTo",
            "in": "query",
            "description": "Datetime stamp in UTC ISO string format of the end of the date time range. Optional, no default if not provided.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"2022-06-28T23:59:59.999Z"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of the result set you want to fetch. Optional, defaults to 1.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"1"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of transactions to return in a page of results. Optional, defaults to 20.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"20"
          },
          {
            "name": "docNumber",
            "in": "query",
            "description": "Filter result set by matching a document number provided on the original request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"12345678"
          },
          {
            "name": "vatCode",
            "in": "query",
            "description": "Filter result set by matching a VAT code from the VAT determination made by our engine.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"BESICSG000"
          }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 25
                    },
                    "next": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "format": "int32",
                          "example": 3
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "example": 20
                        },
                        "uri": {
                          "type": "string",
                          "example": "/v1/determination/vat/transactions?entryDateTimeFrom=2022-06-28T15%3A18%3A28.823Z&page=3&pageSize=20"
                        }
                      }
                    },
                    "previous": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "example": 20
                        },
                        "uri": {
                          "type": "string",
                          "example": "/v1/determination/vat/transactions?entryDateTimeFrom=2022-06-28T15%3A18%3A28.823Z&page=1&pageSize=20"
                        }
                      }

                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "request": {
                            "$ref": "#/components/schemas/determinationVatRequestBody"
                          },
                          "response": {
                            "$ref": "#/components/schemas/determinationVatResponse200"
                          },
                          "entryDateTime": {
                            "description": "Datetime the transaction was created on our platform",
                            "type": "string",
                            "example": "2022-06-28T14:12:35.000Z"
                          },
                          "_id": {
                            "description": "Unique id issued by our platform for this transaction",
                            "type": "string",
                            "example": "7942cf02-2067-4b37-8e00-e3bd3926d6e5"
                          }
                        }
                      }
                    },
                  }
                }
              }
            }
          },

          "401": {
            "description": "Unauthorized - invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "AU001",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "tags": [ "VAT determination" ]
      }
    },
    "/determination/vat/transactions/{id}": {
      "get": {
        "summary": "Return a specific transaction by id",
        "description": "Providing the id of the transaction will fetch the transaction from
        the Tax Agile platform; by default it returns a summary of the payload sent in, and our response back. Using the ?detail=true query parameter returns a full representation of the transaction and how it was processed by our engine.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json":{
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#/components/schemas/determinationVatRequestBody"
                    },
                    "response": {
                      "$ref": "#/components/schemas/determinationVatResponse200"
                    },
                    "entryDateTime": {
                      "description": "Datetime the transaction was created on our platform",
                      "type": "string",
                      "example": "2022-06-28T14:12:35.000Z"
                    },
                    "_id": {
                      "description": "Unique id issued by our platform for this transaction",
                      "type": "string",
                      "example": "7942cf02-2067-4b37-8e00-e3bd3926d6e5"
                    }
                  }
                },
              },
            },
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "QY001",
                  "message": "Document 7942cf02-2067-4b37-8e00-e3bd3926d6e5 not found"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "AU001",
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Uuid of the transaction",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f17b19f2-391c-46b4-9857-025cb0d64a51"
          },
          {
            "name": "detail",
            "in": "query",
            "description": "Optional parameter to fetch a detailed representation of the transactionl; if not used it defaults to a summary",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "tags":[ "VAT determination" ]
      }
    }
  },
  "tags": [
    {
      "name": "VAT determination",
      "description": "Access VAT Calc functionality via our determination endpoints."
    },
    {
      "name": "Authentication",
      "description": "Use these endpoints to get an active auth token."
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "authSchemaRequestBody": {
        "properties": {
          "apiKey": {
            "type": "string",
            "maxLength": 40,
            "example": "d9b97d76-5b6c-426f-9625-a1f63b7e195b",
            "minLength": 1,
            "description": "The API key issued by Tax Agile"
          },
          "accountId": {
            "minLength": 1,
            "maxLength": 100,
            "example": "1Qwj3WEgtaABCCkzgkAL",
            "description": "The account id issued by Tax Agile",
            "type": "string"
          }
        },
        "title": "Auth request body",
        "description": "API authentication resource",
        "type": "object",
        "required": [
          "accountId",
          "apiKey"
        ],
        "additionalProperties": false
      },
      "determinationVatResponse200": {
        "title": "VAT determination response body",
        "description": "",
        "properties": {
          "transaction2": {
            "type": "string",
            "example": "N/A - N/A - No exemption - N/A",
            "title": "Transaction 2"
          },
          "reversedOutputVatRate": {
            "type": "number",
            "title": "Reversed output VAT rate",
            "example": 0
          },
          "reversedOutputVat": {
            "title": "Reversed output VAT",
            "example": 0,
            "type": "number"
          },
          "importVatAmount": {
            "type": "number",
            "title": "Import VAT amount",
            "example": 0
          },
          "invoiceMentioning": {
            "example": "Article 138(1) Directive 2006/112 EC",
            "type": "string",
            "title": "Invoice mentioning"
          },
          "deductibleRate": {
            "type": "number",
            "title": "Deductible rate",
            "example": 0
          },
          "sellerVatNo": {
            "type": "string",
            "title": "Seller VAT number country",
            "example": "BE"
          },
          "deductibleInputVat": {
            "example": 0,
            "title": "Deductible input VAT",
            "type": "number"
          },
          "transaction1": {
            "type": "string",
            "title": "Transaction 1",
            "example": "Supply of goods - BE - Intra-Community supply - N/A - 0 - 0 - 0"
          },
          "buyerVatNo": {
            "example": "DE",
            "type": "string",
            "title": "Buyer VAT number country"
          },
          "rateT1": {
            "type": "number",
            "example": 0,
            "title": "Rate T1"
          },
          "vatCode": {
            "example": "BESICSG000",
            "type": "string",
            "title": "VAT code"
          },
          "vatBoxes": {
            "title": "VAT box reporting",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "country": {
                  "title": "Reporting country",
                  "type": "string",
                  "example": "BE"
                },
                "box": {
                  "title": "Box name",
                  "example": "01",
                  "type": "string"
                },
                "value": {
                  "type": "number",
                  "example": 0,
                  "title": "Box value"
                }
              },
              "title": "Items"
            }
          },
          "taxPoint": {
            "type": "string",
            "example": "2022-05-09T00:00:00.000Z",
            "title": "Tax point"
          },
          "vatAmount": {
            "type": "number",
            "title": "VAT amount",
            "example": 0
          },
          "calculatedRate": {
            "type": "number",
            "title": "Calculated rate",
            "example": 0
          },
          "baseAmount": {
            "type": "number",
            "example": 100,
            "title": "Base amount"
          }
        },
        "type": "object"
      },
      "determinationVatRequestBody": {
        "$ref": "./schemas/vatDeterminationRequestBodySchema.json"
      },
      "errorResponse": {
        "description": "Standardised error response returned with a code and message",
        "title": "Standard error object",
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "example": "<error code>"
          },
          "message": {
            "example": "<error message>",
            "type": "string"
          }
        }
      }
    }
  }
}
