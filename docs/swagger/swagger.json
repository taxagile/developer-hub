{
  "openapi": "3.0.3",
  "info": {
    "description": " [Home](../../) | [Getting started](../getting-started.html) | [Postman](../postman.html) | [Swagger](#/) \n #### Tax Agile provides the powerful VAT Calc determination engine and VAT Auditor tool over a RESTful API. \nYou need an Account ID and API Key pair for the `POST /v1/auth` endpoint which will then return a time-limited Bearer token in the response. Us this Bearer token in the Authorization header of requests. \n\n Please [contact us](https://www.vatcalc.com/contact/) if you would like a demo and access. \n\n  ##### Find out more about our products on our website [vatcalc.com](https://www.vatcalc.com/)\n",
    "title": "Tax Agile API Specification",
    "version": "1.2.0",
    "contact": {
      "name": "Tax Agile Support",
      "url": "https://vatcalc.freshdesk.com/support/home"
    }
  },
  "externalDocs": {
    "description": "Latest Release Notes",
    "url": "https://github.com/taxagile/developer-hub/releases/latest"
  },
  "servers": [
    {
      "url": "https://test-api.taxagile.io/",
      "description": "Test API"
    },
    {
      "url": "https://api.taxagile.io/",
      "description": "Production API"
    }
  ],
  "paths": {
    "/v1/operations/{id}": {
      "get": {
        "tags": [ "Operations"],
        "summary": "Status of a long-running operation.",
        "description": "## Returns details of a long-running operation. \n\n Use this endpoint to poll for completion of an operation. When the operation completes this endpoint returns a new location header and href in body of the new resource on a `302 See Other` status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Uuid of the specific operation",
            "required": true,
            "example": "e7c54568-6a4a-4e73-a176-dc59d0ec5604",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Operation incomplete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationsResponse200"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "Refers to this endpoint when incomplete status",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "Delay seconds",
                "schema": {
                  "type": "integer"
                }
              }
            }
        
          },
          "303": {
            "description": "See Other - Operation complete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationsResponse303"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "Path to find new resource",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "Delay seconds",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "OP001",
                  "message": "Operation Id is a mandatory path parameter"
                }
              }
            }

          },
          "401": {
            "$ref": "#/components/responses/error401"
          },
          "404": {
            "$ref": "#/components/responses/error404"
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "OP003",
                  "message": "Error encountered fetching operation ${operationId}"
                },
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
         }
      }
    },
    "/v1/auditor/vat/audits":{
      "post": {
        "tags": [ "VAT Auditor"],
        "summary": "Create a new audit.",
        "description": "## Submit transaction data to VAT Auditor \n Send it as either body JSON, or as an Excel xlsx as multipart form-data, which has been mapped to our data model.\n\nThis endpoint returns with an operation token to use with the `GET /operations/{id}` endpoint to poll for the Audit completion.",
        "parameters": [],
        "requestBody": { 
          "required": true,
          "description": "The request can be sent as an `application/json` body, or a `multipart/form-data`. \n\n ### application/json \n\n An array of data [ vatDataModelSchema ] transactions, plus an options object which specifies how the system handles the Audit.  When sending Tax Agile data model format JSON, the mappingId should be set to 'default'.\n\n ### multipart/form-data \n\n Has two fields one called 'file' which takes an excel sheet xlsx file; the second called 'options' which takes a json {} with the Audit options. \n\n #### Note: Maximum file size 5mb",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vatAuditRequestBody"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object", 
                "properties": {
                  "file":{
                    "type": "string",
                    "format": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" 
                  },
                  "options": {
                    "$ref": "#/components/schemas/vatAuditOptions"
                  }
                }
              }
            }
    
          }
        },
        "responses": {
          "202": {
            "description": "Accepted request and an operation ID issued.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/longRunningAccepted202"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "Path to find the polling operation",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "Delay seconds",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request \n\n VA001 - Invalid content-type in request header \n\n VA002 - Request options - missing options.mappingId \n\n VA003 - Data mapping record not found - check options.mappingId \n\n VA005 - File not uploaded to cloud storage \n\n VA006 - Unhandled error \n\n VA007 - Request body in an unexpected format. Check content-type is set correctly \n\n IO001 - File not found or not of a supported type",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "VA001",
                  "message": "Invalid content-type in request header"
                },
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "VA006",
                  "message": "_error details_"
                },
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
         }
      },
      "get": {
        "tags": [ "VAT Auditor"],
        "summary": "Summary list of audits.",
        "description": "## Lists the (100) most recent audits. \n If there a no items in the list this will return an empty array, on a 200 OK.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json" : {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "FQWaTQN3TXdTD8MGYaXJ"
                      },
                      "entryDateTime": {
                        "type": "string",
                        "example": "2023-03-30T15:13:18.347Z"
                      },
                      "dataSourceName": {
                        "type": "string",
                        "example":"2023-03-30T15:13:17.094Z.json"
                      },
                      "mappingName": {
                        "type": "string",
                        "example":"Tax Agile default json schema"
                      },
                      "dataSource": {
                        "type": "string",
                        "example": "api"
                      },
                      "status": {
                        "type": "string",
                        "example": "Complete"
                      }
                    }
  

                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          }
        }
      }
    },
    "/v1/auditor/vat/audits/{id}":{
      "get": {
        "tags": [ "VAT Auditor"],
        "summary": "Summary of a specific audit.",
        "description": "## Summary of a specific audit. \n The `{id}` for the path parameter is provided by the `GET /operations/{id}` response as the `href` field in the body and also the `location` header. \n\n It is also avaialable from the summary list of audits `GET /auditor/vat/audits` endpoint. \n\n The response body is a summary of the audit including metrics, data summary, datasource information, and includes results href.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the audit",
            "required": true,
            "example": "9A8FL3X3hr6I0QSLNFAA",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": { 
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vatAuditSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "VA008",
                  "message": "Audit Id is a mandatory path parameter"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          },
          "404": {
            "$ref": "#/components/responses/error404"
          },
          "500": {
            "description": "Unhandled error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "VA010",
                  "message": "Error encountered fetching audit {id}"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [ "VAT Auditor"],
        "summary": "Removes audit results and data from the platform.",
        "description": "## Deletes audit and associated data.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the specific audit",
            "required": true,
            "example": "9A8FL3X3hr6I0QSLNFAA",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete request accepted with no content"           
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "VA008",
                  "message": "Audit Id is a mandatory path parameter"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          },
          "404": {
            "$ref": "#/components/responses/error404"
          },
          "500": {
            "description": "Unhandled error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "VA011",
                  "message": "Error encountered deleting audit {id}"
                }
              }
            }
          }
         }
      }
    },
    "/v1/auditor/vat/audits/{id}/results":{
      "get": {
        "tags": [ "VAT Auditor"],
        "summary": "Results of a specific audit.",
        "description": "The `{id}` for the path parameter is provided by the `GET /operations/{id}` response as the `href` field in the body and also the `location` header. \n\n It is also avaialable from the summary list of audits `GET /auditor/vat/audits` endpoint. \n\n The response body is an array of transactions, showing data errors, audit check issues and successful transactions.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the audit",
            "required": true,
            "example": "9A8FL3X3hr6I0QSLNFAA",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "State the number of transactions to return in the response.\n\nMaximum value 1000. If not provided defaults to 20.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example":"100"
          },
          {
            "name": "startAfter",
            "in": "query",
            "description": "When moving through the results dataset provide the id of the last transaction in the previous page, and the response will 'startAfter' that transaction.\n\nLeave blank to receive the first page of data.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"b5e9282e-8a40-4462-81c3-2ab28b904f57"
          }
        ],
        "responses": { 
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vatAuditResultsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "VA008",
                  "message": "Audit Id is a mandatory path parameter"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          },
          "404": {
            "$ref": "#/components/responses/error404"
          },
          "500": {
            "description": "Unhandled error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "VA009",
                  "message": "Error encountered fetching audit {id}"
                }
              }
            }
          }
        }
      }
    },

    "/v1/auth": {
      "post": {
        "tags": [ "Authentication" ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expiresIn": {
                      "example": 86400,
                      "description": "The time in seconds before the token is expired and can no longer be used",
                      "type": "number"
                    },
                    "accessToken": {
                      "description": "Use this token on subsequent API requests in the authorization header with the format 'Bearer <token>'",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50SWQiOiJERU1PIiwiaWF0IjoxNjUzMDU3MjU2LCJleHAiOjE2NTMxNDM2NTZ9.bSMQE3mRHL0LGl9Fpn3rl8wJkvQC7WN9N-U7ikwaavQ",
                      "type": "string"
                    },
                    "tokenType": {
                      "type": "string",
                      "example": "Bearer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "SV001",
                  "message": "JSON schema validation failed: must NOT have fewer than 1 characters in: accountId"
                },
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          }
        },
        "summary": "Authenticate with API Key to receive a Bearer token",
        "description": "Use API key and accountId to authenticate, and receive a time-based Bearer token which is then used on subsequent requests in the Authorization header.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/authSchemaRequestBody"
              }
            }
          },
          "description": ""
        }
      }
    },
    "/v1/determination/vat/transactions": {
      "post": {
        "summary": "Send a transaction and receive a VAT determination.",
        "description": "Send a transaction to the determination engine for VAT. The request body supports a large number of conditions which may be true on your transaction, but all are not required. It can be helpful to use VAT Advisor to enter a sample transaction to understand the request body you need to send. The transaction can be stored if you include the query parameter commit=true if stored, the response will provide a uuid.",
        "requestBody": {
          "required": true,
          "description": "The payload body requires a JSON object which represents the transaction. If fields are missing, the API will return a response object with context enriched guidance on how to correct the request. Then the caller can resend an updated transaction",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/determinationVatRequestBody"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "commit",
            "description": "Optional, defaults to false; if true the transaction is stored and a unique id is provided in the response.",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "true"
            }
          },
          {
            "name": "useTaxCodes",
            "description": "Optional, defaults to false; if true the engine will check the ERP tax codes setup in our system and return the matching ERP code.",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/determinationVatResponse200"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request \n\n VD001 - Request body data malformed \n\n VD002 - Unhandled content-type \n\n VD003 - Missing field in data",
            "content": {
              "application/json": {
                "example": {
                  "errorCode": "VD003",
                  "message": "Missing field: date.docDate | Hint: What is the date of the document?"
                },
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          }
        },
        "tags": [ "VAT Calc" ]
      },
      "get": {
        "summary": "Fetch a collection of transactions with filter params",
        "description": "Returns a paginated dataset of the committed (saved) transactions stored on the platform. Takes filter criteria as query parameters and sets defaults to ensure a huge dataset is not fetched.  Can be used to collect data periodically to store in your analysis data store; or to build an interactive dashboard in your application.",
        "parameters": [
          {
            "name": "entryDateTimeFrom",
            "in": "query",
            "description": "Datetime stamp in UTC ISO string format from which to select transactions to return. Optional, if not provided it defaults to current date time -30 days.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"2022-06-28T00:00:00.000Z"
          },
          {
            "name": "entryDateTimeTo",
            "in": "query",
            "description": "Datetime stamp in UTC ISO string format of the end of the date time range. Optional, no default if not provided.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"2022-06-28T23:59:59.999Z"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of the result set you want to fetch. Optional, defaults to 1.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"1"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of transactions to return in a page of results. Optional, defaults to 20.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"20"
          },
          {
            "name": "docNumber",
            "in": "query",
            "description": "Filter result set by matching a document number provided on the original request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"12345678"
          },
          {
            "name": "vatCode",
            "in": "query",
            "description": "Filter result set by matching a VAT code from the VAT determination made by our engine.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example":"BESICSG000"
          }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 25
                    },
                    "next": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "format": "int32",
                          "example": 3
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "example": 20
                        },
                        "href": {
                          "type": "string",
                          "example": "/v1/determination/vat/transactions?entryDateTimeFrom=2022-06-28T15%3A18%3A28.823Z&page=3&pageSize=20"
                        }
                      }
                    },
                    "previous": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "example": 20
                        },
                        "href": {
                          "type": "string",
                          "example": "/v1/determination/vat/transactions?entryDateTimeFrom=2022-06-28T15%3A18%3A28.823Z&page=1&pageSize=20"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "request": {
                            "$ref": "#/components/schemas/determinationVatRequestBody"
                          },
                          "response": {
                            "$ref": "#/components/schemas/determinationVatResponse200"
                          },
                          "entryDateTime": {
                            "description": "Datetime the transaction was created on our platform",
                            "type": "string",
                            "example": "2022-06-28T14:12:35.000Z"
                          },
                          "_id": {
                            "description": "Unique id issued by our platform for this transaction",
                            "type": "string",
                            "example": "7942cf02-2067-4b37-8e00-e3bd3926d6e5"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          }
        },
        "tags": [ "VAT Calc" ]
      }
    },
    "/v1/determination/vat/transactions/{id}": {
      "get": {
        "summary": "Return a specific transaction by id",
        "description": "Providing the id of the transaction will fetch the transaction from the Tax Agile platform; by default it returns a summary of the payload sent in, and our response back. \n\n Using the `?detail=true` query parameter returns a detail representation of the transaction and how it was processed by our engine.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json":{
                "schema": {
                  "oneOf": [
                    {"$ref": "#/components/schemas/summaryTransactionResponse"},
                    {"$ref": "#/components/schemas/detailTransactionResponse"}
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "errorCode": "QY001",
                  "message": "Document 7942cf02-2067-4b37-8e00-e3bd3926d6e5 not found"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/error401"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Uuid of the transaction",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f17b19f2-391c-46b4-9857-025cb0d64a51"
          },
          {
            "name": "detail",
            "in": "query",
            "description": "Optional parameter to fetch a detailed representation of the transaction; if not used it defaults to a summary",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "tags":[ "VAT Calc" ]
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication endpoints."
    },
    {
      "name": "VAT Calc",
      "description": "Use our engine to do VAT determination on transactions."
    },
    {
      "name": "VAT Auditor",
      "description": "Complete an Audit of VAT compliance on your data."
    },
    {
      "name": "Operations",
      "description": "Manage async operation queues."
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "authSchemaRequestBody": {
        "properties": {
          "apiKey": {
            "type": "string",
            "maxLength": 40,
            "example": "d9b97d76-5b6c-426f-9625-a1f63b7e195b",
            "minLength": 1,
            "description": "The API key issued by Tax Agile"
          },
          "accountId": {
            "minLength": 1,
            "maxLength": 100,
            "example": "1Qwj3WEgtaABCCkzgkAL",
            "description": "The account id issued by Tax Agile",
            "type": "string"
          }
        },
        "title": "Auth request",
        "description": "API authentication resource",
        "type": "object",
        "required": [
          "accountId",
          "apiKey"
        ],
        "additionalProperties": false
      },
      "determinationVatResponse200": {
        "title": "VAT Determination response",
        "description": "",
        "properties": {
          "transaction1": {
            "type": "string",
            "title": "Transaction 1",
            "example": "Supply of goods - BE - Intra-Community supply - N/A - 0 - 0 - 0"
          },
          "transaction2": {
            "type": "string",
            "example": "N/A - N/A - No exemption - N/A",
            "title": "Transaction 2"
          },
          "rateT1": {
            "type": "number",
            "example": 0,
            "title": "Rate T1"
          },
          "reversedOutputVat": {
            "title": "Reversed output VAT",
            "example": 0,
            "type": "number"
          },
          "reversedOutputVatRate": {
            "type": "number",
            "title": "Reversed output VAT rate",
            "example": 0
          },
          "deductibleInputVat": {
            "example": 0,
            "title": "Deductible input VAT",
            "type": "number"
          },
          "invoiceMentioning": {
            "example": "Article 138(1) Directive 2006/112 EC",
            "type": "string",
            "title": "Invoice mentioning"
          },
          "invoiceMentioningEu": {
            "example": "Article 138(1) Council Directive 2006/112 EC",
            "type": "string",
            "title": "Invoice mentioning EU"
          },
          "taxableTransactionT1": {
            "example": "Supply of goods",
            "type": "string",
            "title": "Taxable transaction"
          },
          "transType": {
            "example": "Intra-Community supply",
            "type": "string",
            "title": "Transaction type"
          },
          "posT1": {
            "example": "BE",
            "type": "string",
            "title": "Place of supply"
          },
          "exemptionDescriptionT1": {
            "example": "Intra-Community supply",
            "type": "string",
            "title": "Exemption description"
          },
          "obligationToPayT1": {
            "example": "N/A",
            "type": "string",
            "title": "Obligation to pay"
          },      
          "taxPoint": {
            "type": "string",
            "example": "2022-05-09T00:00:00.000Z",
            "title": "Tax point"
          },
          "deductibleRate": {
            "type": "number",
            "title": "Deductible rate",
            "example": 0
          },
          "sellerVatNo": {
            "type": "string",
            "title": "Seller VAT number country",
            "example": "BE"
          },
          "buyerVatNo": {
            "example": "DE",
            "type": "string",
            "title": "Buyer VAT number country"
          },
          "baseAmount": {
            "type": "number",
            "example": 100,
            "title": "Base amount"
          },
          "vatAmount": {
            "type": "number",
            "title": "VAT amount",
            "example": 0
          },
          "importVatAmount": {
            "type": "number",
            "title": "Import VAT amount",
            "example": 0
          },
          "vatCode": {
            "example": "BESICSG000",
            "type": "string",
            "title": "VAT code"
          },
          "taxCode": {
            "title": "Tax code",
            "type": "string",
            "example": ["A3", "IC0", "B0"],
            "description": "Only returned when the request uses the useTaxCodes=true query parameter "
          },
          "calculatedRate": {
            "type": "number",
            "title": "Calculated rate",
            "example": 0
          },
          "uuid": {
            "type": "string",
            "title":"Unique id of transaction",
            "example": "fea0f7da-074e-47e9-8bde-51b8b5f778da"
          },
          "vatBoxes": {
            "title": "VAT box reporting",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "country": {
                  "title": "Reporting country",
                  "type": "string",
                  "example": "BE"
                },
                "box": {
                  "title": "Box name",
                  "example": "01",
                  "type": "string"
                },
                "value": {
                  "type": "number",
                  "example": 0,
                  "title": "Box value"
                }
              },
              "title": "Items"
            }
          } 
        },
        "type": "object"
      },
      "determinationVatRequestBody": {
        "$ref": "./schemas/vatDeterminationRequestBodySchema.json"
      },
      "errorResponse": {
        "description": "Standardised error response returned with a code and message",
        "title": "Error",
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "example": "<error code>"
          },
          "message": {
            "example": "<error message>",
            "type": "string"
          }
        }
      },
      "summaryTransactionResponse": {
        "title": "VAT Determination Summary",
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/determinationVatRequestBody"
          },
          "response": {
            "$ref": "#/components/schemas/determinationVatResponse200"
          },
          "entryDateTime": {
            "description": "Datetime the transaction was created on our platform",
            "type": "string",
            "example": "2022-06-28T14:12:35.000Z"
          },
          "_id": {
            "description": "Unique id issued by our platform for this transaction",
            "type": "string",
            "example": "7942cf02-2067-4b37-8e00-e3bd3926d6e5"
          },
          "source": {
            "description": "Entry point source on the platform",
            "type": "string",
            "example": "api"
          }
        }
      },
      "detailTransactionResponse": {
        "title": "VAT Determination Detail",
        "type": "object",
        "properties": {
          "entryDateTime": {
            "description": "Datetime the transaction was created on our platform",
            "type": "string",
            "example": "2022-06-28T14:12:35.000Z"
          },
          "_id": {
            "description": "Unique id issued by our platform for this transaction",
            "type": "string",
            "example": "7942cf02-2067-4b37-8e00-e3bd3926d6e5"
          },
          "source": {
            "description": "Entry point source on the platform",
            "type": "string",
            "example": "api"
          },
          "determinationData": {
            "type": "object",
            "description": "Detailed insights into the transactions determination",
            "properties": {
              "calcBuffer": {
                "type": "object"
              },
              "analysisResult": {
                "type": "object"
              },
              "auditResult": {
                "type": "object"
              }
            }
          },
          "transactionData": {
            "type": "object",
            "description": "Attributes of the transaction"
          },
          "apiRequestData": {
            "type": "object",
            "description": "If the transaction was loaded via API this will contain the request and response",
            "properties": {
              "request": {
                "$ref": "#/components/schemas/determinationVatRequestBody"
              },
              "response": {
                "$ref": "#/components/schemas/determinationVatResponse200"
              }
            }
          }
        }
      },
      "vatAuditSummaryResponse": {
        "title": "VAT Audit Summary",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "i1yKcOrT2Rv9neYsKwvG"
          },
          "entryDateTime": {
            "type": "string",
            "example": "2023-05-18T09:45:57.204Z"
          },
          "summary": {
            "type": "object",
            "properties": {
              "auditMetrics": {
                "type": "object",
                "properties": {
                  "totalQualityOk": {
                    "type": "integer",
                    "description": "Count of transactions which could be audited",
                    "example": 20
                  },
                  "totalAccurate": {
                    "type": "integer",
                    "description": "Count of transactions with no problems found",
                    "example": 13
                  },
                  "totalExposure": {
                    "type": "integer",
                    "example": 4770
                  }
                }
              },
              "dataSummary": {
                "type": "array",
                "description": "Array of data quality issues in audit",
                "items":{
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Description of problem",
                      "type": "string",
                      "example": "A blank value is not a correct value for \"buyer.VatIdCountry\". Check the mapping."
                    }, 
                    "count": {
                      "description": "Count of transactions with this error",
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              },
              "errors": {
                "type": "array",
                "description": "Summary of all errors in the audit",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "checkVatAmountDifference",
                      "description": "Unique id of the audit error"
                    }, 
                    "name": {
                      "type": "string",
                      "example": "VAT amount",
                      "description": "Label text for this error check"
                    },
                    "count": {
                      "type": "integer",
                      "example": 6,
                      "description": "Count of occurances of this error in audit"
                    }
                  }
                }
              },
              "totalDocuments": {
                "type": "integer",
                "example": 25,
                "description": "Total number of documents in the audit"
              }
            }
          },
          "dataDetails": {
            "type": "object",
            "properties": {
              "dataSource": {
                "type": "string",
                "example": "api"
              },
              "dataSourceName": {
                "type": "string",
                "example": "2023-05-18T09:45:55.923Z.json"
              },
              "dataSourceType": {
                "type": "string",
                "example": "application/json"
              },
              "mappingId": {
                "type": "string",
                "example": "PMTyBJlgbaa2ChOEydk3"
              },
              "mappingName": {
                "type": "string",
                "example": "VAT Calc Demo Company"
              }
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "storeTransactions": {
                "type": "boolean",
                "example": "true"
              },
              "doTaxCodeMapping": {
                "type": "boolean",
                "example": "false"
              },
              "sendToFiler": {
                "type": "boolean",
                "example": "false"
              }
            }
          },
          "results": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "example": "/v0/auditor/vat/audits/i1yKcOrT2Rv9neYsKwvG/results"
              }
            }
          }
        }
      },
      "vatAuditResultsResponse": {
        "title": "VAT Audit Results",
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items":{
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "1a1da4fa-270c-4aae-bf4d-5b7af11b693d"
                },
                "docNumber": {
                  "type": "string",
                  "example": "BE 102202"
                }, 
                "docDate": {
                  "type": "string",
                  "example": "2023-02-05"
                },
                "auditResult":{
                  "type": "object",
                  "properties": {
                    "errors":{
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "checkVatAmountDifference",
                            "description": "Name of the error"
                          },
                          "message": {
                            "type": "string",
                            "example": "VAT amount in data (630.00) does not match the value Auditor calculated (0.00)"
                          },
                          "exposure": {
                            "type": "number",
                            "example": 400
                          },
                          "type": {
                            "type": "string",
                            "example": "engineCheck",
                            "description": "Identifies the error as engineCheck, requiredData, conditionCheck or unhandledException"
                          }
                        }
                      }
                    },
                    "done": {
                      "type": "boolean"
                    },
                    "parties": {
                      "type": "object",
                      "description": "Indentifies who was the company and counterparty for the transaction based on document type",
                      "properties": {
                        "company" : {
                          "type": "string",
                          "example": "seller",
                          "description": "seller or buyer"
                        },
                        "companyName": {
                          "type": "string",
                          "example": "VAT Calc Demo Co BVBA"
                        }, 
                        "counterparty": {
                          "type": "string",
                          "example": "buyer",
                          "description": "seller or buyer"
                        },
                        "counterpartyName": {
                          "type": "string",
                          "example": "BE Company Customer Ltd"
                        }
                      }
                    },
                    "hasErrors": {
                      "type": "boolean",
                      "description": "Flag whether there are errors in this transaction",
                      "example": true
                    },
                    "exposure": {
                      "type": "integer",
                      "example": 630
                    }
                  }
                },
                "analysisResult": {
                    "$ref": "#/components/schemas/determinationVatResponse200"
                }
              }
            }
          },
          "count": {
            "type": "object",
            "properties": {
              "totalInAudit": {
                "type": "integer",
                "description": "Total number of transactions in the audit batch",
                "example": 30
              },
              "showing": {
                "type": "integer",
                "example": 20,
                "description": "Number of transactions shown in this response"
              }
            }
          },
          "next": {
            "type": "object",
            "description": "Object to assist in fetching the next page of results",
            "properties": {
              "pageSize": {
                "type": "integer",
                "example": 20
              },
              "href": {
                "type": "string",
                "example": "/v1/auditor/vat/audits/vJDk97ZoLnUuc1aoJXSM/results?startAfter=b5e9282e-8a40-4462-81c3-2ab28b904f57&pageSize=20",
                "description": "Reference to the first page of results"
              }
            }
          },
          "first": {
            "type": "object",
            "description": "Object to assist in fetching the first page of results",
            "properties": {
              "href": {
                "type": "string",
                "example": "/v1/auditor/vat/audits/vJDk97ZoLnUuc1aoJXSM/results?pageSize=20",
                "description": "Reference to the first page of results"
              }
            }
          }
        }
      },
      "vatAuditRequestBody": {
        "title": "VAT Audit request",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vatDataModelSchema"
              }   
          },
          "options": {
            "$ref": "#/components/schemas/vatAuditOptions"
          }
        }
      },
      "vatDataModelSchema": {
        "title":"VAT data model",
        "type":"object",
        "properties": 
        {
          "date": {
            "type": "object",
            "properties": {
              "supplyDate": {
                "type": "string",
                "format": "date",
                "description": "Date of supply of good or service?"
              },
              "docDate": {
                "type": "string",
                "format": "date",
                "description": "What is the date of the document?"
              },
              "dateOfTransaction": {
                "type": "string",
                "format": "date",
                "description": "What is the date of the transaction?"
              },
              "paymentDate": {
                "type": "string",
                "format": "date",
                "description": "What is the date of payment?"
              }
            }
          },
          "buyer": {
            "type": "object",
            "properties": {
              "vatIdType": {
                "type": "string",
                "enum": [
                  "Fixed establishment",
                  "Fiscal representative",
                  "Direct",
                  "Main establishment"
                ],
                "description": "What type of VAT registration is it?"
              },
              "countriesVATRegistration": {
                "type": "string",
                "description": "In which countries does the customer have a VAT registration?"
              },
              "id": {
                "type": "string",
                "description": "What is the customer's company ID?"
              },
              "isHospital": {
                "type": "boolean",
                "description": "Is the buyer a hospital?"
              },
              "isRegisteredForToms": {
                "type": "boolean",
                "description": "Is the buyer registered for the Tour Operator Margin Scheme?"
              },
              "customerOrPrincipal": {
                "type": "string",
                "enum": [
                  "Customer",
                  "Principal"
                ],
                "description": "Supply made directly to the Customer, or to a Principal?"
              },
              "isGasElecTaxableDealer": {
                "type": "boolean",
                "description": "Is the supply to a taxable dealer/trader?"
              },
              "countriesExciseRegistration": {
                "type": "boolean",
                "description": "In which countries does the customer have a VAT registration?"
              },
              "city": {
                "type": "string",
                "description": ""
              },
              "countriesImportDefermentLicence": {
                "type": "string",
                "description": "In which countries does the customer have a licence for import deferment?"
              },
              "vatGroupID": {
                "type": "string",
                "description": "What is the name of the VAT Group this company belongs to?"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Taxable person",
                  "Non-taxable legal person",
                  "Private person",
                  "European Union body",
                  "Embassy",
                  "International body",
                  "NATO"
                ],
                "description": "What is the buyer type?"
              },
              "isTravelAgent": {
                "type": "boolean",
                "description": "Is the buyer a travel agent?"
              },
              "isTrader": {
                "type": "boolean",
                "description": "Is the customer a trader of the item?"
              },
              "isCharity": {
                "type": "boolean",
                "description": "Is the buyer a charity?"
              },
              "_id": {
                "type": "string",
                "description": "Internal Buyer ID"
              },
              "localTaxId": {
                "type": "string",
                "description": ""
              },
              "isRegisteredConsignee": {
                "type": "boolean",
                "description": "Is the customer a registered consignee?"
              },
              "exportScheme": {
                "type": "boolean",
                "description": "Is the buyer registered with the export scheme?"
              },
              "establishedCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "In which country is the buyer established?"
              },
              "buyerVatId": {
                "type": "string",
                "description": "What is the customer's VAT ID?"
              },
              "postCode": {
                "type": "string",
                "description": "What is the postcode of the ship to address?"
              },
              "name": {
                "type": "string",
                "description": "Name of customer?"
              },
              "address": {
                "type": "string",
                "description": ""
              },
              "countriesFixedEstablishment": {
                "type": "string",
                "description": "In which countries does the customer have a fixed establishment?"
              },
              "isVessel": {
                "type": "boolean",
                "description": "Is the customer a vessel that carries passengers or goods?"
              },
              "combinationGroupID": {
                "type": "string",
                "description": "What is the name of the combination group this company belongs to?"
              },
              "vatIdCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the country of the buyer's VAT ID?"
              },
              "buyerExciseNumber": {
                "type": "string",
                "description": "What is the customer's excise number?"
              },
              "warehouseLicenceNumber": {
                "type": "string",
                "description": "Buyer's VAT / excise warehouse licence number"
              },
              "establishmentReceivingSupply": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Which establishment is receiving the supply?"
              },
              "exciseNumberCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the country of the supplier's excise number?"
              },
              "isAirline": {
                "type": "boolean",
                "description": "Is the customer a airline that carries passengers or goods?"
              }
            }
          },
          "transactionDetail": {
            "type": "object",
            "properties": {
              "shippingAndHandlingAmount": {
                "type": "string",
                "description": "Shipping and handling amount"
              },
              "optedNotToTax": {
                "type": "boolean",
                "description": "Has the supplier opted not to tax?"
              },
              "isVatWarehouseRemoval": {
                "type": "boolean",
                "description": "Are the goods removed from a VAT warehouse?"
              },
              "isVatWarehouse": {
                "type": "boolean",
                "description": "VAT warehouse regime?"
              },
              "betweenContractors": {
                "type": "boolean",
                "description": "Transaction between two contractors?"
              },
              "isFreeZone": {
                "type": "boolean",
                "description": "Goods placed in free zone?"
              },
              "isSuccessiveSupply": {
                "type": "boolean",
                "description": "Part of a successive (chain) supply?"
              },
              "taxCodeDescription": {
                "type": "boolean",
                "description": ""
              },
              "ExciseDutySuspensionRelease": {
                "type": "boolean",
                "description": "Are goods being released from excise duty suspension?"
              },
              "underExciseDutySuspension": {
                "type": "boolean",
                "description": "Goods under excise duty suspension?"
              },
              "isCustomsProcedure": {
                "type": "boolean",
                "description": "Goods placed under customs procedure?"
              },
              "isCustomsProcedureRemoval": {
                "type": "boolean",
                "description": "Are goods removed from a customs procedure?"
              },
              "isForProvisioningOfAirline": {
                "type": "boolean",
                "description": "For the provisioning of an airline?"
              },
              "isForProvisioningOfVessel": {
                "type": "boolean",
                "description": "For the provisioning of a vessel?"
              },
              "warehouseFiscalRepresentative": {
                "type": "boolean",
                "description": "Appointed local fiscal representative?"
              },
              "chainTransactionInvoice1": {
                "type": "boolean",
                "description": "First invoice on chain transaction?"
              },
              "cashAccounting": {
                "type": "boolean",
                "description": "Using cash accounting?"
              },
              "insuranceAmount": {
                "type": "string",
                "description": "Insurance amount"
              },
              "chainTransactionInvoice2": {
                "type": "boolean",
                "description": "Second invoice on chain transaction?"
              },
              "isTemporaryStorage": {
                "type": "boolean",
                "description": "Goods placed under temporary storage?"
              },
              "isInwardProcessing": {
                "type": "boolean",
                "description": "Goods placed under inward processing?"
              },
              "optedToTax": {
                "type": "boolean",
                "description": "Has the supplier opted to tax?"
              },
              "linkedToExport": {
                "type": "boolean",
                "description": "is the transaction related to an export?"
              },
              "isDonatedItem": {
                "type": "boolean",
                "description": "Is/Was the item donated to the charity?"
              },
              "isExternalTransit": {
                "type": "boolean",
                "description": "Goods under external transit (T1) procedure?"
              },
              "relevantContractsTax": {
                "type": "boolean",
                "description": "Under Relevant Contracts Tax / CIS?"
              },
              "isBusinessEntertainment": {
                "type": "boolean",
                "description": "For business entertainment"
              },
              "businessUsage": {
                "type": "string",
                "description": "Percentage business use?"
              },
              "natureOfTransaction": {
                "type": "string",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "11",
                  "12",
                  "21",
                  "22",
                  "23",
                  "31",
                  "32",
                  "33",
                  "34",
                  "41",
                  "42",
                  "51",
                  "52",
                  "60",
                  "71",
                  "72",
                  "80",
                  "91",
                  "99"
                ],
                "description": "Nature of transaction (intrastat)"
              },
              "taxCode": {
                "type": "string",
                "description": "Tax code from the source system"
              },
              "importedUnderDefermentScheme": {
                "type": "boolean",
                "description": "Are the goods imported under an import VAT deferment scheme?"
              },
              "storedInDesignatedArea": {
                "type": "boolean",
                "description": "Stored in designated area?"
              },
              "durationOfHire": {
                "type": "string",
                "description": "Duration of hire (days)?"
              },
              "customsDutyAndLevyAmount": {
                "type": "string",
                "description": "Other duties taxes and levies on import"
              },
              "intrastatVatScheme": {
                "type": "string",
                "enum": [
                  "10",
                  "11",
                  "19",
                  "20",
                  "10",
                  "21",
                  "25",
                  "26",
                  "29",
                  "31"
                ],
                "description": "VAT scheme for intrastat"
              },
              "isCustomsWarehouse": {
                "type": "boolean",
                "description": "Goods placed in customs warehouse?"
              },
              "isExciseWarehouse": {
                "type": "boolean",
                "description": "Excise warehouse regime?"
              },
              "callOffStock": {
                "type": "boolean",
                "description": "Are the goods supplied under a call-off stock arrangement?"
              },
              "soldOnMarketplace": {
                "type": "boolean",
                "description": "Sold on a marketplace?"
              }
            }
          },
          "vehicleDetail": {
            "type": "object",
            "properties": {
              "age": {
                "type": "string",
                "description": "How old is the vehicle?"
              },
              "numberOfSeats": {
                "type": "string",
                "description": "How many seats in the vehicle"
              },
              "kilometresTravelled": {
                "type": "string",
                "description": "How many kilometres has the vehicles travelled?"
              },
              "length": {
                "type": "string",
                "description": "What is the length of the vessel?"
              },
              "power": {
                "type": "string",
                "description": "What is the vehicle power?"
              },
              "cubicCapacity": {
                "type": "string",
                "description": "What is the cubic capacity?"
              }
            }
          },
          "item": {
            "type": "object",
            "properties": {
              "reversedVatRateToCheck": {
                "type": "string",
                "description": ""
              },
              "unit": {
                "type": "string",
                "enum": [
                  "Litre",
                  "Kilogram",
                  "Cubic metre",
                  "MVh",
                  "Megawatt-hour",
                  "Imperial gallon"
                ],
                "description": "What is the item unit?"
              },
              "itemID": {
                "type": "string",
                "description": "What is the ID of the item?"
              },
              "reversedVatAmountToCheck": {
                "type": "string",
                "description": ""
              },
              "tariffCode": {
                "type": "string",
                "description": "What is the tariff code?"
              },
              "userRateCategory": {
                "type": "string",
                "enum": [
                  "Auto",
                  "S",
                  "M",
                  "R",
                  "L",
                  "Z"
                ],
                "description": "User defined rate category"
              },
              "lineNumber": {
                "type": "string",
                "description": ""
              },
              "vatAmountToCheck": {
                "type": "string",
                "description": "What is the VAT amount to be checked by Auditor?"
              },
              "value": {
                "type": "string",
                "description": "What is the amount of the item?"
              },
              "vatRateToCheck": {
                "type": "string",
                "description": "What is the VAT rate to be checked by Auditor?"
              },
              "origin": {
                "type": "string",
                "description": "What is the origin of the goods?"
              },
              "rateCategory": {
                "type": "string",
                "description": "What is the VAT rate category?"
              },
              "measurement": {
                "type": "string",
                "description": "Total of a unit of measurement"
              },
              "deductibleInputVatRate": {
                "type": "string",
                "description": "Deductible rate?"
              },
              "quantity": {
                "type": "string",
                "description": "Quantity"
              },
              "deductibleInputVat": {
                "type": "string",
                "description": "What amount of the input VAT is deductible?"
              },
              "description": {
                "type": "string",
                "description": "Item description"
              },
              "totalAmount": {
                "type": "string",
                "description": "What is the document total?"
              },
              "itemType": {
                "type": "string",
                "enum": [
                  "Accommodation for business associates",
                  "Accommodation for employees",
                  "Accountancy service",
                  "Activities carried out by television and radio bodies (non-commercial)",
                  "Admission to a cinema",
                  "Admission to a circus",
                  "Admission to a concert or theatre",
                  "Admission to a sporting event",
                  "Admission to amusement parks",
                  "Admission to events",
                  "Advertising services",
                  "Aircraft",
                  "Air freight",
                  "Alcohol (other)",
                  "Aluminium",
                  "Animal foodstuffs",
                  "Antiques",
                  "Architecture services",
                  "Baby food and processed food stuff",
                  "Banking",
                  "Bedding plants, seeds, fertilizers and other agrochemical products",
                  "Beer",
                  "Betting",
                  "Beverages (non-alcoholic)",
                  "Books",
                  "Books (educational only)",
                  "Bread",
                  "Broadcasting services",
                  "Building materials",
                  "Bus",
                  "Car",
                  "Cattle food",
                  "Cereals",
                  "Chemicals",
                  "Children's car seats",
                  "Children's clothing",
                  "Clothing",
                  "CO2 emission rights",
                  "Coal and coke",
                  "Cocoa beans, whole or broken, raw or roasted",
                  "Coconuts, Brazil nuts and cashew nuts",
                  "Coffee, not roasted",
                  "Collectors' items",
                  "Computers and peripheral equipment",
                  "Construction of social dwellings",
                  "Construction work, including repair, cleaning, maintenance, demolition",
                  "Construction, errection or housing used on a permanent residence",
                  "Consultancy service",
                  "Copper",
                  "Courier service",
                  "Cultural, sporting and exhibition services",
                  "Data processing",
                  "Demolition and rebuilding of houses in major cities",
                  "Dental services",
                  "Development and sale of non-standard Software",
                  "Diesel",
                  "Digital service",
                  "Digital newspaper",
                  "Disbursement",
                  "eBook",
                  "Edible oils",
                  "Education",
                  "Electricity",
                  "Electronically supplied services",
                  "Estate agency services",
                  "Extended warranty",
                  "Financial services that aren't exempt",
                  "Food and beverage (non-alcoholic)",
                  "Footwear",
                  "Fuel",
                  "Gas and electricity certificates",
                  "Gas oil",
                  "Gas through a natural gas system",
                  "Geological materials",
                  "Goods for the equipping, fuelling and provisioning of pleasure boats and private aircraft or any other means of transport for private use",
                  "Goods supplied on board train, vessel or aircraft",
                  "Goods supplied with installation",
                  "GP services",
                  "Grains and oil seeds (including soya beans) and oleaginous fruits",
                  "Hairdressing services",
                  "Haulage services",
                  "Heating or cooling energy through networks",
                  "Heavy fuel oil (HFO)",
                  "Hire of a motor vehicle",
                  "Hire of a vessel",
                  "Hire of an aircraft",
                  "Hire of goods",
                  "Holiday camp accommodation",
                  "Hospital care",
                  "Hotel accommodation",
                  "Human organs, blood and milk",
                  "Husked rice",
                  "Hydrogen",
                  "Indemnity",
                  "Insolvency practitioner service",
                  "Installation services (becomes part of an immovable property)",
                  "Installation services (does not become part of an immovable property)",
                  "Insurance",
                  "Integrated circuit devices or computer chips",
                  "Investment gold",
                  "Kerosene",
                  "Land",
                  "Lawyer's service",
                  "Lead",
                  "Petrol (leaded)",
                  "Leasing of a building",
                  "Letting of a building",
                  "Letting agency services",
                  "Livestock",
                  "Liquid petroleum gas (LPG)",
                  "Lorry",
                  "Lotteries",
                  "Lubricant",
                  "Machinery",
                  "Magazines",
                  "Marketing",
                  "Media streaming",
                  "Medical equipment",
                  "Medication",
                  "Metals",
                  "Milk",
                  "Mineral oils (including propane and butane; also including crude petroleum oils)",
                  "Miscellaneous goods",
                  "Miscellaneous goods (middle rate)",
                  "Miscellaneous goods (reduced rate)",
                  "Miscellaneous goods (lower rate)",
                  "Miscellaneous goods (super-reduced rate)",
                  "Miscellaneous goods (zero rate)",
                  "Miscellaneous service",
                  "Miscellaneous service (middle rate)",
                  "Miscellaneous service (reduced rate)",
                  "Miscellaneous service (lower rate)",
                  "Miscellaneous service (super-reduced rate)",
                  "Miscellaneous service (zero rate)",
                  "Mobile phone",
                  "Modification, repair or maintenance of a vessel",
                  "Modification, repair or maintenance of an aircraft",
                  "Motorbike",
                  "Movable, tangible property",
                  "Natural gas",
                  "Newspaper or periodical publishing service",
                  "Newspapers",
                  "Non-fungible token",
                  "Nickel",
                  "Old, used, scrap materials",
                  "Olives",
                  "Organising of events",
                  "Other event services",
                  "Other goods",
                  "Other nuts",
                  "Other services",
                  "Payment Services",
                  "Periodicals",
                  "Petroleum",
                  "Pharmaceutical products",
                  "Photographs and other printed matter",
                  "Platinum (palladium, rhodium)",
                  "Postal services",
                  "Potatoes",
                  "Private tuition",
                  "Provision of information",
                  "Raw or semi-finished metals (not scrap metals)",
                  "Raw sugar",
                  "Refuelling aircraft",
                  "Refuelling vessels",
                  "Reinsurance",
                  "Renovation and repair of private dwellings",
                  "Renovation of houses over 10 years old",
                  "Repair and maintenance services",
                  "Restaurant and catering services",
                  "Restaurant and catering services on board a ship, aircraft or train",
                  "Rubber, in primary forms or in plates, sheets or strip",
                  "Sea freight",
                  "Services connected to sports competitions and games of chance",
                  "Services linked to sport or physical education by non-profit making orangisations",
                  "Services linked to welfare and social security",
                  "Services of consultants, engineers, consultancy firms, lawyers, accountants and other similar services, as well as data processing and the provision of information",
                  "Services rendered by operators of museums, botanical gardens and zoos",
                  "Services Supplied by Travel Agents",
                  "Services to disabled persons",
                  "Silver",
                  "Small repair services to bicycles, shoes and clothing",
                  "Social care for children",
                  "Social housing",
                  "Spirits (alcohol)",
                  "Stamps",
                  "Storage services",
                  "Supplies for goods or passenger transport",
                  "Supply of services linked to protection of children and young persons",
                  "Supply of a building",
                  "Supply of staff by religious or philosophical institutions for children's education",
                  "Supply of staff by religious or philosophical institutions for hospital and medical care",
                  "Supply of staff by religious or philosophical institutions for the protection of children and young persons",
                  "Supply of staff by religious or philosophical institutions for welfare and social security work",
                  "Takeway food",
                  "Tea",
                  "Telecommunications services",
                  "Textiles",
                  "The granting and negotiation of credit",
                  "The hire of safes",
                  "The hiring out of moveable tangible property (excluding means of transport)",
                  "The Hiring-out of stands for fairs and exhibitions",
                  "The letting of permanently installed equipment and machinery",
                  "The letting of premises and sites for the parking of vehicles",
                  "The management of special investment funds as defined by Member States",
                  "The negotiation of or any dealings in credit guarantees or any other security for money and the management of credit guarantees by the person who is granting the credit",
                  "The provision of access to a natural gas system situated within the territory of the Community or to any network connected to such a system",
                  "The supply of staff",
                  "The supply of staff engaged in construction work",
                  "Tin",
                  "Tobacco",
                  "Toll",
                  "Train",
                  "Training (with admittance)",
                  "Training (privately contracted)",
                  "Training (online)",
                  "Transactions, including negotiation but not management or safekeeping, in shares, interests in companies or associations, debentures and other securities, but excluding documents establishing title to goods, and the rights or securities",
                  "Transactions, including negotiation, concerning currency, bank notes and coins used as legal tender, with the exception of collectors' items",
                  "Transactions, including negotiation, concerning deposit and current accounts, payments, transfers, debts, cheques and other negotiable instruments, but excluding debt collection",
                  "Transfers and assignments of copyrights, patents, licences, trade marks and similar rights",
                  "Transport services for sick or injured people (ambulance)",
                  "Transport services such as loading, handling, unloading",
                  "Transportation of persons by air",
                  "Transportation of persons by land",
                  "Transportation of persons by sea",
                  "Truck",
                  "Petrol (unleaded)",
                  "Urns and coffins",
                  "Use of sporting facilities",
                  "Valuation of movable proprty",
                  "Van",
                  "Vegetable oils and fats and their fractions, whether or not refined, but not chemically modified",
                  "Vessel",
                  "Vetinary services",
                  "Video games, games consoles, laptops, tablets",
                  "Waste collection",
                  "Water (non-branded)",
                  "Wine",
                  "Wool",
                  "Work on movable property",
                  "Works of art",
                  "Writers, composers, etc",
                  "Zinc"
                ],
                "description": "Item"
              },
              "itemBeingStored": {
                "type": "string",
                "enum": [
                  "Alcohol (other)",
                  "Beer",
                  "Coal and coke",
                  "Diesel",
                  "Electricity",
                  "Fuel",
                  "Gas oil",
                  "Heavy fuel oil (HFO)",
                  "Hydrogen",
                  "Kerosene",
                  "Petrol (leaded)",
                  "Liquid petroleum gas (LPG)",
                  "Lubricant",
                  "Mineral oils (including propane and butane; also including crude petroleum oils)",
                  "Natural gas",
                  "Petroleum",
                  "Spirits (alcohol)",
                  "Tobacco",
                  "Petrol (unleaded)",
                  "Wine",
                  "Potatoes",
                  "Olives",
                  "Coconuts, Brazil nuts and cashew nuts",
                  "Other nuts",
                  "Coffee, not roasted",
                  "Tea",
                  "Cereals",
                  "Husked rice",
                  "Grains and oil seeds (including soya beans) and oleaginous fruits",
                  "Vegetable oils and fats and their fractions, whether or not refined, but not chemically modified",
                  "Raw sugar",
                  "Cocoa beans, whole or broken, raw or roasted",
                  "Chemicals",
                  "Rubber, in primary forms or in plates, sheets or strip",
                  "Wool",
                  "Silver",
                  "Platinum (palladium, rhodium)",
                  "Copper",
                  "Nickel",
                  "Aluminium",
                  "Lead",
                  "Zinc",
                  "Tin",
                  "Other goods"
                ],
                "description": "What item is being stored?"
              }
            }
          },
          "document": {
            "type": "object",
            "properties": {
              "discount": {
                "type": "string",
                "description": "Discount percentage?"
              },
              "documentStatus": {
                "type": "boolean",
                "description": "Is this a cancelled document?"
              },
              "quantity": {
                "type": "string",
                "description": "Quantity"
              },
              "currency": {
                "type": "string",
                "description": "What is the currency on the document?"
              },
              "lineNumber": {
                "type": "string",
                "description": "Line number on the document"
              },
              "docNumber": {
                "type": "string",
                "description": "What is the document number?"
              },
              "vatInclusiveOrExclusive": {
                "type": "string",
                "enum": [
                  "VAT inclusive",
                  "VAT exclusive"
                ],
                "description": "VAT inclusive / exclusive"
              },
              "atcud": {
                "type": "string",
                "description": "ATCUD number"
              },
              "invoiceType": {
                "type": "string",
                "enum": [
                  "Full invoice",
                  "Simplified invoice",
                  "Receipt"
                ],
                "description": "Invoice type"
              },
              "exchangeRate": {
                "type": "string",
                "description": "What is the exchange rate?"
              },
              "docType": {
                "type": "string",
                "enum": [
                  "Sales invoice",
                  "Sales credit",
                  "Purchase invoice",
                  "Purchase credit",
                  "Import document",
                  "Import corrective document",
                  "Self-bill sale",
                  "Self-bill sale credit",
                  "Self-bill purchase",
                  "Self-bill purchase credit",
                  "Sales transfer",
                  "Sales transfer credit",
                  "Purchase transfer",
                  "Purchase transfer credit",
                  "Sales order",
                  "Sales order credit",
                  "Purchase order",
                  "Purchase order credit",
                  "Self-supply sales document",
                  "Self-supply sales credit document",
                  "Self-supply purchase document",
                  "Self-supply purchase credit document",
                  "Debit note",
                  "Electronic administrative document"
                ],
                "description": "Type of document"
              }
            }
          },
          "locations": {
            "type": "object",
            "properties": {
              "departureCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the country of departure?"
              },
              "countryImport": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the country of importation?"
              },
              "placeOfGoods": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the place of the goods?"
              },
              "shipFrom": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Ship from"
              },
              "shipTo": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Ship to"
              },
              "placeOfService": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Where was the service carried out?"
              },
              "arrivalCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the country of arrival?"
              }
            }
          },
          "seller": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": ""
              },
              "buildingNumber": {
                "type": "string",
                "description": ""
              },
              "establishedCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "In which country is the seller established?"
              },
              "sellerVatId": {
                "type": "string",
                "description": "What is the seller's VAT ID?"
              },
              "warehouseLicenceNumber": {
                "type": "string",
                "description": "Seller's VAT / excise warehouse licence number"
              },
              "sellerNonUnionOssId": {
                "type": "string",
                "description": "What is the seller's non-Union OSS ID?"
              },
              "countryNonUnionOssId": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Country of non-Union OSS Id"
              },
              "establishmentMakingSupply": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Which establishment is making the supply"
              },
              "vatGroupID": {
                "type": "string",
                "description": "What is the name of the VAT Group this company belongs to?"
              },
              "countriesImportDefermentLicence": {
                "type": "string",
                "description": "In which countries does the seller have a licence for import deferment?"
              },
              "countryUnionOssId": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Country of Union OSS Id"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Taxable person",
                  "Non-taxable legal person",
                  "Private person",
                  "European Union body",
                  "Embassy",
                  "International body",
                  "NATO"
                ],
                "description": "What is the seller type?"
              },
              "exciseNumberCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the country of the seller's excise ID?"
              },
              "registeredForDistanceSales": {
                "type": "boolean",
                "description": "Registered for distance sales in ship to country (Pre-July 21)?"
              },
              "_id": {
                "type": "string",
                "description": "Internal Seller ID"
              },
              "countriesVATRegistration": {
                "type": "string",
                "description": "In which countries does the supplier have a VAT registration?"
              },
              "name": {
                "type": "string",
                "description": "Name of supplier"
              },
              "isTravelAgent": {
                "type": "boolean",
                "description": "Is the seller a travel agent?"
              },
              "countriesExciseRegistration": {
                "type": "string",
                "description": "In which countries does the supplier have a VAT registration?"
              },
              "county": {
                "type": "string",
                "description": ""
              },
              "countrySellerIossId": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the country of the IOSS Id?"
              },
              "sellerIossId": {
                "type": "string",
                "description": "What is the seller's IOSS ID?"
              },
              "vatIdCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "What is the country of the supplier's VAT ID?"
              },
              "localTaxId": {
                "type": "string",
                "description": ""
              },
              "registeredConsignor": {
                "type": "boolean",
                "description": "Is the supplier a registered consignor?"
              },
              "isRegisteredForToms": {
                "type": "boolean",
                "description": "Is the seller registered for the Tour Operator Margin Scheme?"
              },
              "city": {
                "type": "string",
                "description": ""
              },
              "id": {
                "type": "string",
                "description": "What is the supplier's company ID?"
              },
              "isCharity": {
                "type": "boolean",
                "description": "Is the seller a charity?"
              },
              "sellerUnionOssId": {
                "type": "string",
                "description": "What is the seller's Union OSS ID?"
              },
              "isHospital": {
                "type": "boolean",
                "description": "Is the seller a hospital?"
              },
              "combinationGroupID": {
                "type": "string",
                "description": "What is the name of the combination group this company belongs to?"
              },
              "vatIdType": {
                "type": "string",
                "enum": [
                  "Fixed establishment",
                  "Fiscal representative",
                  "Direct",
                  "Main establishment"
                ],
                "description": "What type of VAT registration is it?"
              },
              "sellerExciseNumber": {
                "type": "string",
                "description": "What is the supplier's excise number?"
              },
              "euDistanceSellingThreshold": {
                "type": "boolean",
                "description": "Exceeded EUR 10k in calendar year (Post-July 21)?"
              },
              "postCode": {
                "type": "string",
                "description": "What is the postcode of the ship from address?"
              },
              "countriesFixedEstablishment": {
                "type": "string",
                "description": "In which countries does the seller have a fixed establishment?"
              },
              "isEligibleEducationalBody": {
                "type": "boolean",
                "description": "Is the supplier an eligible educational body?"
              },
              "registrationThreshold": {
                "type": "boolean",
                "description": "Exceeded registration threshold?"
              }
            }
          },
          "transportTerms": {
            "type": "object",
            "properties": {
              "importerOfRecord": {
                "type": "string",
                "enum": [
                  "Seller",
                  "Buyer"
                ],
                "description": "Which party is the importer?"
              },
              "modeOfTransport": {
                "type": "string",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "7",
                  "9"
                ],
                "description": "Mode of transport (intrastat)"
              },
              "consignmentValue": {
                "type": "string",
                "description": "Value of the consignment?"
              },
              "transport": {
                "type": "string",
                "enum": [
                  "Seller",
                  "Buyer",
                  "Third-party on behalf of seller",
                  "Third-party on behalf of buyer",
                  "None",
                  "Use incoterm"
                ],
                "description": "Which party takes care of the transport?"
              },
              "incoterm": {
                "type": "string",
                "enum": [
                  "DDP",
                  "DPU",
                  "DAP",
                  "DDU",
                  "CFR",
                  "CIF",
                  "CPT",
                  "CIP",
                  "FOB",
                  "FAS",
                  "FCA",
                  "FPC",
                  "EXW"
                ],
                "description": "Incoterm"
              }
            }
          },
          "itemProperties": {
            "type": "object",
            "properties": {
              "isPublicPostalService": {
                "type": "boolean",
                "description": "is PublicPostalService?"
              },
              "isService": {
                "type": "boolean",
                "description": "is Service?"
              },
              "isAdmission": {
                "type": "boolean",
                "description": "is Admission?"
              },
              "isValuationsOfAndWorkOnMoveableProperty": {
                "type": "boolean",
                "description": "is ValuationsOfAndWorkOnMoveableProperty?"
              },
              "isMovableProperty": {
                "type": "boolean",
                "description": "is MovableProperty?"
              },
              "isGasElectricityHeatingCooling": {
                "type": "boolean",
                "description": "is GasElectricityHeatingCooling?"
              },
              "isImmovableProperty": {
                "type": "boolean",
                "description": "is ImmovableProperty?"
              },
              "isAncillaryServicesRelatingToCulturalArtisticSportingScientificEducationalEntertainmentFairsExhibitionsOrSimilarActivities": {
                "type": "boolean",
                "description": "is AncillaryServicesRelatingToCulturalArtisticSportingScientificEducationalEntertainmentFairsExhibitionsOrSimilarActivities?"
              },
              "isInsuranceOrReinsurance": {
                "type": "boolean",
                "description": "is InsuranceOrReinsurance?"
              },
              "isTransportationOfPersons": {
                "type": "boolean",
                "description": "is TransportationOfPersons?"
              },
              "isEnergyGood": {
                "type": "boolean",
                "description": ""
              },
              "isFinancialService": {
                "type": "boolean",
                "description": "is FinancialService?"
              },
              "isArticle59Service": {
                "type": "boolean",
                "description": "is Article59Service?"
              },
              "isTheSupplyOfStaffServices": {
                "type": "boolean",
                "description": "is TheSupplyOfStaffServices?"
              },
              "isAncillaryTransportServices": {
                "type": "boolean",
                "description": "is AncillaryTransportServices?"
              },
              "isSuppliedByIntermediary": {
                "type": "boolean",
                "description": "is SuppliedByIntermediary?"
              },
              "isWelfareAndSocialSecurity": {
                "type": "boolean",
                "description": "is WelfareAndSocialSecurity?"
              },
              "isExciseGood": {
                "type": "boolean",
                "description": "is ExciseGood?"
              },
              "isDigitalService": {
                "type": "boolean",
                "description": "is DigitalService?"
              },
              "isRestaurantOrCateringService": {
                "type": "boolean",
                "description": "is RestaurantOrCateringService?"
              },
              "isOnboardShipAircraftTrain": {
                "type": "boolean",
                "description": "on board ship, aircraft ot train?"
              },
              "isAccommodation": {
                "type": "boolean",
                "description": "is Accommodation?"
              },
              "isHireMeansOfTransport": {
                "type": "boolean",
                "description": "is HireMeansOfTransport?"
              },
              "isTransportationOfGoods": {
                "type": "boolean",
                "description": "is TransportationOfGoods?"
              },
              "isMedicalCare": {
                "type": "boolean",
                "description": "is MedicalCare?"
              },
              "isCapitalGood": {
                "type": "boolean",
                "description": "is CapitalGood?"
              },
              "isEducation": {
                "type": "boolean",
                "description": "is Education?"
              },
              "isNewMeansOfTransport": {
                "type": "boolean",
                "description": "is NewMeansOfTransport?"
              },
              "isServicesConnectedWithImmovableProperty": {
                "type": "boolean",
                "description": "is ServicesConnectedWithImmovableProperty?"
              },
              "isGood": {
                "type": "boolean",
                "description": "is Good?"
              },
              "isGambling": {
                "type": "boolean",
                "description": "is Gambling?"
              },
              "isSecondHand": {
                "type": "boolean",
                "description": "is second hand?"
              }
            }
          },
          "thirdParties": {
            "type": "object",
            "properties": {
              "mpRegisteredForOSS": {
                "type": "boolean",
                "description": "Is the marketplace registered for OSS?"
              },
              "carrierRegisteredForSpecialArrangements": {
                "type": "boolean",
                "description": "Is the carrier registered for Special Arrangements?"
              },
              "mpEstablishedCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "In which country is the marketplace established?"
              },
              "intermediaryRegisteredForIOSS": {
                "type": "boolean",
                "description": "Is the intermediary registered for IOSS?"
              },
              "mpRegisteredForIOSS": {
                "type": "boolean",
                "description": "Is the marketplace registered for IOSS?"
              },
              "partyAEstablishmentCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Establishment country of Party A"
              },
              "partyCVatIdCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "VAT ID country of Party C"
              },
              "partyCEstablishmentCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "Establishment country of Party C"
              },
              "isMarketplace": {
                "type": "boolean",
                "description": "From marketplace perspective?"
              },
              "partyAVatIdCountry": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "example": "GB",
                "description": "VAT ID country of Party A"
              },
              "partyCIsVessel": {
                "type": "boolean",
                "description": "Is the end customer a vessel?"
              }
            }
          },
          "landAndPropertyDetail": {
            "type": "object",
            "properties": {
              "firstGrant": {
                "type": "boolean",
                "description": "Is it the first grant of a major interest?"
              },
              "substantialReconstruction": {
                "type": "boolean",
                "description": "Has the property undergone substantial reconstruction?"
              },
              "isConversion": {
                "type": "boolean",
                "description": "Is this a conversion?"
              },
              "isNewBuild": {
                "type": "boolean",
                "description": "Is the property a new build?"
              },
              "certficateOfUsage": {
                "type": "boolean",
                "description": "Is there a certificate to confirm the property is for relevant residential or relevant charitable? "
              },
              "typeOfBuilding": {
                "type": "string",
                "enum": [
                  "Dwelling",
                  "Relevant residential",
                  "Relevant charitable",
                  "Protected building",
                  "Commercial",
                  "Other"
                ],
                "description": "What is the type of building"
              },
              "freehold": {
                "type": "boolean",
                "description": "Is it a freehold?"
              },
              "leaseholdLength": {
                "type": "string",
                "description": "How long is the leasehold?"
              },
              "suppliedAsPartOfConstructionService": {
                "type": "boolean",
                "description": "Have the materials been supplied as part of a construction service?"
              },
              "conversionType": {
                "type": "string",
                "enum": [
                  "Non-residential to residential",
                  "Residential conversion (house to flat, 1 flat to 2 flats, etc)",
                  "Other"
                ],
                "description": "Type of conversion"
              }
            }
          }
        }
      },
      "longRunningAccepted202": {
        "title": "Operation Accepted",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique operation id",
            "type": "string", 
            "example": "ceb50cb0-0135-4fdf-bcd3-dbfc9d4d9adc"
          },
          "href": {
            "description": "Location to poll for operation status",
            "type": "string",
            "example": "/v1/operations/ceb50cb0-0135-4fdf-bcd3-dbfc9d4d9adc"
          }
        }
      },
      "operationsResponse200": {
        "title": "Operation Poll",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique operation id",
            "type": "string", 
            "example": "7942cf02-2067-4b37-8e00-e3bd3926d6"
          },
          "status": {
            "description": "Operation status",
            "type": "string",
            "example": "Pending | Inprogress"
          },
          "href": {
            "description": "Location to poll for operation status",
            "type": "string",
            "example": "/v1/operations/7942cf02-2067-4b37-8e00-e3bd3926d6"
          }
        }
      },
      "operationsResponse303": {
        "title": "Operation Complete",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique operation id",
            "type": "string", 
            "example": "7942cf02-2067-4b37-8e00-e3bd3926d6"
          },
          "status": {
            "description": "Operation status",
            "type":"string",
            "example": "Complete"
          },
          "href": {
            "description": "Resource uri",
            "type": "string",
            "example": "/v1/auditor/vat/audits/6gmTpTAM3xC7m3v66xB8"
          }
        }
      },
      "vatAuditOptions": {
          "title": "VAT Audit Options",
          "type": "object",
          "required": [ "mappingId" ],
          "properties": {
            "mappingId": {
              "type": "string",
              "example": "CTDCqBkBozNOQe1NFoaa"
            },
            "sendToFiler": {
              "type": "boolean",
              "default": false
            },
            "doTaxCodeMapping": {
              "type": "boolean",
              "default": false
            }
          }
      }
    },
    "requestBodies": {},
    "responses": {
      "error401": {
        "description": "Unauthorized - invalid token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorResponse"
            },
            "example": {
              "errorCode": "AU001",
              "message": "Unauthorized"
            }
          }
        }
      },
      "error404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorResponse"
            },
            "example": {
              "errorCode": "QY001",
              "message": "Not found"
            }
          }
        }
      }
    }
  }
}
