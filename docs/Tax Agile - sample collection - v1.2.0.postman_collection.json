{
	"info": {
		"_postman_id": "6e97a00f-ab7a-4f61-aeaf-e033d21a48f0",
		"name": "Tax Agile - sample collection - v1.2.0",
		"description": "##### API Version: v1.2.0\n\nThis sample Postman collection is provided to help understand the Tax Agile API, it can be used in conjunction with our swagger OAS3 documentation [https://taxagile.github.io/developer-hub/](https://taxagile.github.io/developer-hub/API)\n\n# Set up\n\nYou need to setup an Environment in Postman and it needs three fields:\n\n## API_ROOT\n\nThis is the server hosting the API you want to make requests to, possible values are:\n\n| **Server** | **API_ROOT** |\n| --- | --- |\n| Production | [https://api.taxagile.io](https://api.taxagile.io) |\n| Staging | [https://test-api.taxagile.io/](https://test-api.taxagile.io/) |\n\n## ACCOUNT_ID\n\nThis is your Tax Agile tenant on our platform, so this is not a username, but instead a identifier of your account as a whole.\n\nWe will provide you your Account Id and API key when you start to implement to our API.\n\n_Note: these credentials will be provisioned against a server, so you must use Production credentials with the Production API_ROOT._\n\n## API_KEY\n\nThis is a uuid string which will be provided by us when you start to implement to our API.\n\n# Collection requests\n\nIn the collection root there are 12 example requests:\n\n| **Name** | **Functionality** |\n| --- | --- |\n| **GET /health** | An unauthenticated endpoint, you can call to check you have the correct hostname and your firewall is letting you connect with Tax Agile. |\n| **POST Auth** | Takes ACCOUNT_ID and API_KEY environment variables and creates a new Bearer token. |\n| **POST VAT Determination - ICS** | Makes a VAT Determination which is not committed (saved) |\n| **POST VAT Determination - Local supply** | Makes a VAT Determination which is not committed (saved) |\n| **POST VAT Determination with commit** | Makes a VAT Determination with the commit=true parameter so save the transaction. |\n| **GET VAT Determination by ID** | Returns a summary of the request sent and response given for the transaction; using the uuid returned on the commited determination as the ID. |\n| **GET VAT Determinations for date range** | Queries the commited (saved) transactions and returns a paged result set. The example shows a date/time range filter, but other filter options are set on the request and can be enabled. |\n| **POST Create Audit with json** | Create a new audit by sending in transactions in a JSON body |\n| **POST Create Audit - Excel (form-data)** | Create a new audit by sending in transactions from an uploaded Excel sheet. |\n| **GET Poll Operations endpoint** | Poll the operation for a complete status |\n| **GET Audit summary by ID** | Fetch a summary of the audit job |\n| **GET Audit results by ID** | Retrieve the detail of the audit |\n| **GET Audits - list latest 100** | List top 100 audits in your account |\n| **DELETE Audit by ID** | Delete an audit |\n\nYou can duplicate the sample requests and modify to fit your use-cases.\n\n# Getting Started\n\nWhen you have setup your environment, you should be able to use the \"Auth\" request without changing anything. If that doesn't work, then there is an issue with your setup; get in touch for help.\n\nWhen you have successfully authenticated, the response contains a Bearer token and the Postman collection has some code in the requests to populate a local collection variable (AUTH_TOKEN) with that bearer token.\n\nYou can now try the \"VAT Determination\" endpoint; that automatically uses the Bearer token from your Auth request, so again it should work without changing anything.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20900666"
	},
	"item": [
		{
			"name": "Health check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_ROOT}}/health",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"AUTH_TOKEN\", jsonData.accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"accountId\": \"{{ACCOUNT_ID}}\", \"apiKey\": \"{{API_KEY}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_ROOT}}/v1/auth",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "VAT Determination - intra-community supply",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"ID\", jsonData.uuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionData\": {\n        \"date\": {\n            \"docDate\": \"2022-05-09T00:00:00.000Z\",\n            \"supplyDate\": \"2022-05-09T00:00:00.000Z\",\n            \"dateOfTransaction\": \"2022-05-09T00:00:00.000Z\",\n            \"paymentDate\": \"2022-05-09T00:00:00.000Z\"\n        },\n        \"seller\": {\n            \"type\": \"Taxable person\",\n            \"isTravelAgent\": false,\n            \"address\": \"Rue Gillon 59\",\n            \"establishedCountry\": \"BE\",\n            \"city\": \"Brussels\",\n            \"vatIdCountry\": \"BE\",\n            \"countriesFixedEstablishment\": \"BE\",\n            \"countriesVATRegistration\": \"AT,BE,BG,CH,CY,CZ,DE,DK,EE,ES,FI,FR,GB,GR,HR,HU,IE,IT,LT,LU,LV,MT,XI,NL,PL,PT,RO,SE,SI,SK,NO\",\n            \"name\": \"BE Trading BVBA\",\n            \"postCode\": \"1210\"\n        },\n        \"item\": {\n            \"itemType\": \"Animal foodstuffs\",\n            \"itemID\": \"\",\n            \"reversedVatRate\": 0,\n            \"totalAmountCurrency2\": 0,\n            \"vatRate\": 0,\n            \"totalAmount\": 0,\n            \"value\": 100\n        },\n        \"document\": {\n            \"quantity\": 1,\n            \"docNumber\": \"900001\",\n            \"docType\": \"Sales invoice\",\n            \"currency\": \"EUR\",\n            \"lineNumber\": 1\n        },\n        \"buyer\": {\n            \"type\": \"Taxable person\",\n            \"address\": \"Kurfuerstendamm 45\",\n            \"countriesImportDefermentLicence\": \"\",\n            \"establishedCountry\": \"DE\",\n            \"establishmentReceivingSupply\": \"DE\",\n            \"city\": \"MÃ¼nchen\",\n            \"vatIdCountry\": \"DE\",\n            \"countriesFixedEstablishment\": \"DE\",\n            \"countriesVATRegistration\": \"DE\",\n            \"name\": \"DE Company GmbH\",\n            \"postCode\": \"80011\"\n        },\n        \"locations\": {\n            \"shipFrom\": \"BE\",\n            \"shipTo\": \"DE\"\n        },\n        \"transportTerms\": {\n            \"transport\": \"Seller\"\n        },\n        \"transactionDetail\": {\n            \"callOffStock\": false,\n            \"cashAccounting\": false,\n            \"isExternalTransit\": false\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_ROOT}}/v1/determination/vat/transactions",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"determination",
						"vat",
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "VAT Determination - local supply",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"ID\", jsonData.uuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionData\": {\n        \"date\": {\n            \"dateOfTransaction\": \"2022-07-01T00:00:00.000Z\",\n            \"docDate\": \"2022-07-01T00:00:00.000Z\",\n            \"supplyDate\": \"2022-07-01T00:00:00.000Z\",\n            \"paymentDate\": \"2022-07-01T00:00:00.000Z\"\n        },\n        \"seller\": {\n            \"address\": \"Rue Gillon 59\",\n            \"city\": \"Brussels\",\n            \"establishedCountry\": \"BE\",\n            \"vatIdCountry\": \"BE\",\n            \"type\": \"Taxable person\",\n            \"isTravelAgent\": false,\n            \"countriesFixedEstablishment\": \"BE\",\n            \"isCharity\": false,\n            \"countriesVATRegistration\": \"BE\",\n            \"vatGroupID\": \"BE101\",\n            \"name\": \"BE Company BVBA\",\n            \"postCode\": \"1210\",\n            \"isHospital\": false\n        },\n        \"item\": {\n            \"totalAmount\": 10000,\n            \"itemType\": \"Miscellaneous goods\",\n            \"value\": 10000\n        },\n        \"document\": {\n            \"quantity\": 1,\n            \"docNumber\": \"000001\",\n            \"docType\": \"Sales invoice\",\n            \"currency\": \"EUR\",\n            \"lineNumber\": 1\n        },\n        \"locations\": {\n            \"shipFrom\": \"BE\",\n            \"shipTo\": \"BE\"\n        },\n        \"transportTerms\": {\n            \"transport\": \"Seller\"\n        },\n        \"transactionDetail\": {\n            \"callOffStock\": false,\n            \"cashAccounting\": false,\n            \"isExternalTransit\": false\n        },\n        \"buyer\": {\n            \"address\": \"Rue Gillon 59\",\n            \"city\": \"Brussels\",\n            \"establishedCountry\": \"BE\",\n            \"establishmentReceivingSupply\": \"BE\",\n            \"isAirline\": false,\n            \"vatIdCountry\": \"BE\",\n            \"type\": \"Taxable person\",\n            \"countriesFixedEstablishment\": \"BE\",\n            \"isVessel\": false,\n            \"isCharity\": false,\n            \"countriesVATRegistration\": \"BE\",\n            \"vatGroupID\": \"BE101\",\n            \"name\": \"BE Company BVBA\",\n            \"postCode\": \"1210\",\n            \"isHospital\": false\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_ROOT}}/v1/determination/vat/transactions",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"determination",
						"vat",
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "VAT Determination with commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"ID\", jsonData.uuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"transactionData\":\n  {\n    \"date\": {\n      \"docDate\": \"2022-05-09T00:00:00.000Z\",\n      \"supplyDate\": \"2022-05-09T00:00:00.000Z\",\n      \"dateOfTransaction\": \"2022-05-09T00:00:00.000Z\",\n      \"paymentDate\": \"2022-05-09T00:00:00.000Z\"\n    },\n    \"seller\": {\n      \"type\": \"Taxable person\",      \n      \"isTravelAgent\": false,\n      \"address\": \"Rue Gillon 59\",\n      \"establishedCountry\": \"BE\",\n      \"city\": \"Brussels\",\n      \"vatIdCountry\": \"BE\",\n      \"countriesFixedEstablishment\": \"BE\",\n      \"countriesVATRegistration\": \"AT,BE,BG,CH,CY,CZ,DE,DK,EE,ES,FI,FR,GB,GR,HR,HU,IE,IT,LT,LU,LV,MT,XI,NL,PL,PT,RO,SE,SI,SK,NO\",\n      \"name\": \"BE Trading BVBA\",\n      \"postCode\": \"1210\"\n    },\n    \"item\": {\n      \"itemType\": \"Animal foodstuffs\",\n      \"itemID\": \"\",\n      \"reversedVatRate\": 0,\n      \"totalAmountCurrency2\": 0,\n      \"vatRate\": 0,\n      \"totalAmount\": 0,\n      \"value\": 100\n    },\n    \"document\": {\n      \"quantity\": 1,\n      \"docNumber\": \"900001\",\n      \"docType\": \"Sales invoice\",\n      \"currency\": \"EUR\",\n      \"lineNumber\": 1\n    },\n    \"buyer\": {\n      \"type\": \"Taxable person\",\n      \"address\": \"Kurfuerstendamm 45\",\n      \"countriesImportDefermentLicence\": \"\",\n      \"establishedCountry\": \"DE\",\n      \"establishmentReceivingSupply\": \"DE\",\n      \"city\": \"MÃ¼nchen\",\n      \"vatIdCountry\": \"DE\",\n      \"countriesFixedEstablishment\": \"DE\",\n      \"countriesVATRegistration\": \"DE\",\n      \"name\": \"DE Company GmbH\",\n      \"postCode\": \"80011\"\n    },\n    \"locations\": {\n      \"shipFrom\": \"BE\",\n      \"shipTo\": \"DE\"\n    },\n    \"transportTerms\": {\n      \"transport\": \"Seller\"\n    },\n    \"transactionDetail\": {\n      \"callOffStock\": false,\n      \"cashAccounting\": false,\n      \"isExternalTransit\": false\n    }\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_ROOT}}/v1/determination/vat/transactions?commit=true",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"determination",
						"vat",
						"transactions"
					],
					"query": [
						{
							"key": "commit",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "VAT Determination by ID",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_ROOT}}/v1/determination/vat/transactions/{{ID}}",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"determination",
						"vat",
						"transactions",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "VAT Determinations for date range",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_ROOT}}/v1/determination/vat/transactions?pageSize=5&page=1&entryDateTimeFrom=2023-06-01T00:00:00.000Z",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"determination",
						"vat",
						"transactions"
					],
					"query": [
						{
							"key": "docNumber",
							"value": "900001",
							"description": "Filter results by document number sent on the determination request",
							"disabled": true
						},
						{
							"key": "vatCode",
							"value": "BESICSG000",
							"description": "Filter results by VAT Code issued on the determination response",
							"disabled": true
						},
						{
							"key": "pageSize",
							"value": "5",
							"description": "How many records to get in each response"
						},
						{
							"key": "page",
							"value": "1",
							"description": "Which page of resultset to return for this request"
						},
						{
							"key": "entryDateTimeFrom",
							"value": "2023-06-01T00:00:00.000Z",
							"description": "Entry date/time from"
						},
						{
							"key": "entryDateTimeTo",
							"value": "2022-07-01T23:59:59.999Z",
							"description": "Entry date/time to",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Audit with json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"OPERATION_ID\", jsonData._id);",
							"",
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							"",
							"",
							"var schema = {   ",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"_id\": {",
							"        \"type\": \"string\"",
							"        },",
							"        \"href\": {",
							"        \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"_id\",",
							"    \"href\"",
							"  ]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"setTimeout(()=> {}, 10000);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"data\": [\n        {\n            \"seller\": {\n                \"sellerUnionOssId\": \"\",\n                \"euDistanceSellingThreshold\": true,\n                \"sellerIossId\": \"\",\n                \"establishedCountry\": \"BE\",\n                \"isTravelAgent\": false,\n                \"vatIdCountry\": \"BE\",\n                \"registeredForDistanceSales\": true,\n                \"type\": \"Taxable person\",\n                \"countriesFixedEstablishment\": \"BE\",\n                \"countriesVATRegistration\": \"BE\",\n                \"name\": \"BE Company BVBA\",\n                \"sellerNonUnionOssId\": \"\"\n            },\n            \"date\": {\n                \"dateOfTransaction\": \"2022-10-15\",\n                \"docDate\": \"2023-02-05\",\n                \"supplyDate\": \"2023-02-05\",\n                \"paymentDate\": \"2023-02-05\"\n            },\n            \"item\": {\n                \"totalAmount\": 1000,\n                \"itemType\": \"Other goods\",\n                \"vatRateToCheck\": 0,\n                \"description\": \"Book\",\n                \"vatAmountToCheck\": 0,\n                \"value\": 1000\n            },\n            \"thirdParties\": {\n                \"mpEstablishedCountry\": \"\",\n                \"mpRegisteredForIOSS\": false,\n                \"mpRegisteredForOSS\": false,\n                \"intermediaryRegisteredForIOSS\": false,\n                \"carrierRegisteredForSpecialArrangements\": false\n            },\n            \"document\": {\n                \"quantity\": 1,\n                \"exchangeRate\": \"\",\n                \"docNumber\": \"IN999\",\n                \"docType\": \"Sales invoice\",\n                \"currency\": \"EUR\",\n                \"lineNumber\": 1,\n                \"vatInclusiveOrExclusive\":\"VAT exclusive\"\n            },\n            \"locations\": {\n                \"shipFrom\": \"BE\",\n                \"departureCountry\": \"\",\n                \"placeOfGoods\": \"DE\",\n                \"placeOfService\": \"\",\n                \"countryImport\": \"\",\n                \"arrivalCountry\": \"\",\n                \"shipTo\": \"DE\"\n            },\n            \"transportTerms\": {\n                \"importerOfRecord\": \"\",\n                \"transport\": \"Seller\"\n            },\n            \"transactionDetail\": {\n                \"durationOfHire\": \"\",\n                \"isCustomsProcedure\": false,\n                \"importedUnderDefermentScheme\": false,\n                \"isCustomsWarehouse\": false,\n                \"isVatWarehouse\": false,\n                \"soldOnMarketplace\": false,\n                \"cashAccounting\": false,\n                \"isExternalTransit\": false,\n                \"isSuccessiveSupply\": false,\n                \"callOffStock\": false\n            },\n            \"buyer\": {\n                \"establishedCountry\": \"DE\",\n                \"isAirline\": false,\n                \"vatIdCountry\": \"DE\",\n                \"type\": \"Taxable person\",\n                \"countriesFixedEstablishment\": \"DE\",\n                \"isVessel\": false,\n                \"isCharity\": false,\n                \"countriesVATRegistration\": \"DE\",\n                \"name\": \"DE Company GmbH\",\n                \"isHospital\": false,\n                \"isGasElecTaxableDealer\": false\n            }\n        }\n    ],\n    \"options\": {\n        \"sendToFiler\": false,\n        \"doTaxCodeMapping\": false\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_ROOT}}/v1/auditor/vat/audits",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"auditor",
						"vat",
						"audits"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Audit - Excel (form-data)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"OPERATION_ID\", jsonData._id);",
							"",
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							"",
							"",
							"var schema = {   ",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"_id\": {",
							"        \"type\": \"string\"",
							"        },",
							"        \"href\": {",
							"        \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"_id\",",
							"    \"href\"",
							"  ]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"setTimeout(()=> {}, 10000);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "Upload file",
							"type": "file",
							"src": []
						},
						{
							"key": "options",
							"value": "{\"doTaxCodeMapping\": false, \"sendToFiler\": false, \"mappingId\": \"PMTyBJlgbaa2ChOEydk3\"}",
							"description": "Upload options",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{API_ROOT}}/v1/auditor/vat/audits",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"auditor",
						"vat",
						"audits"
					]
				},
				"description": "For the form-data body, you may have trouble getting Postman to upload a file from your local machine.\n\nCheck the settings:\n\n<img src=\"https://content.pstmn.io/fcb6936e-7921-475b-a525-1c6183d461a4/U2NyZWVuc2hvdCAyMDIzLTA0LTAzIGF0IDE2LjMxLjMwLnBuZw==\" alt=\"\">\n\nIf you have it set like this, you must put your Excel files, in the named Location; or you can turn on \"Allow reading files outside working directory\" to be able to browse your computer for a file."
			},
			"response": []
		},
		{
			"name": "Poll Operations endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"if (pm.response.code === 303) {",
							"    pm.collectionVariables.set(\"AUDIT_HREF\", jsonData.href);",
							"    pm.collectionVariables.set(\"AUDIT_ID\", jsonData.href.split('/')[5]);",
							"}",
							"",
							"var schema = { ",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"_id\": {",
							"        \"type\": \"string\"",
							"        },",
							"        \"status\": {",
							"        \"type\": \"string\"",
							"        },",
							"        \"href\": {",
							"        \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"_id\",",
							"        \"status\"",
							"    ]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Status code is 200 or 303\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 303])",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followRedirects": false
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_ROOT}}/v1/operations/{{OPERATION_ID}}",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"operations",
						"{{OPERATION_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Audit summary by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = { ",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"    \"_id\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"entryDateTime\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"summary\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"auditMetrics\": {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"totalAccurate\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"totalQualityOk\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"totalExposure\": {",
							"              \"type\": \"integer\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"totalAccurate\",",
							"            \"totalQualityOk\",",
							"            \"totalExposure\"",
							"          ]",
							"        },",
							"        \"dataSummary\": {",
							"          \"type\": \"array\"",
							"        },",
							"        \"errors\": {",
							"          \"type\": \"array\"",
							"        },",
							"        \"totalDocuments\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"auditMetrics\",",
							"        \"dataSummary\",",
							"        \"errors\",",
							"        \"totalDocuments\"",
							"      ]",
							"    },",
							"    \"dataDetails\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"dataSource\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"dataSourceName\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"dataSourceType\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"mappingId\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"mappingName\": {",
							"          \"type\": \"string\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"dataSource\",",
							"        \"dataSourceName\",",
							"        \"dataSourceType\",",
							"        \"mappingId\",",
							"        \"mappingName\"",
							"      ]",
							"    },",
							"    \"options\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"storeTransactions\": {",
							"          \"type\": \"boolean\"",
							"        },",
							"        \"doTaxCodeMapping\": {",
							"          \"type\": \"boolean\"",
							"        },",
							"        \"sendToFiler\": {",
							"          \"type\": \"boolean\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"storeTransactions\",",
							"        \"doTaxCodeMapping\",",
							"        \"sendToFiler\"",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"_id\",",
							"    \"entryDateTime\",",
							"    \"summary\",",
							"    \"dataDetails\",",
							"    \"options\",",
							"    \"results\"",
							"  ]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_ROOT}}/v1/auditor/vat/audits/{{AUDIT_ID}}",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"auditor",
						"vat",
						"audits",
						"{{AUDIT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Audit results by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"transactions\": {",
							"      \"type\": \"array\",",
							"      \"items\": [",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"_id\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"docNumber\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"docDate\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"auditResult\": {",
							"              \"type\": \"object\",",
							"              \"properties\": {",
							"                \"errors\": {",
							"                  \"type\": \"array\",",
							"                  \"items\": {}",
							"                },",
							"                \"done\": {",
							"                  \"type\": \"boolean\"",
							"                }",
							"              },",
							"              \"required\": [",
							"                \"errors\"",
							"              ]",
							"            },",
							"            \"analysisResult\": {",
							"              \"type\": \"object\",",
							"              \"properties\": {",
							"                \"transaction1\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"transaction2\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"reversedOutputVat\": {",
							"                  \"type\": \"integer\"",
							"                },",
							"                \"reversedOutputVatRate\": {",
							"                  \"type\": \"integer\"",
							"                },",
							"                \"deductibleInputVat\": {",
							"                  \"type\": \"integer\"",
							"                },",
							"                \"invoiceMentioning\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"invoiceMentioningEu\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"buyerVatNo\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"taxPoint\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"deductibleRate\": {",
							"                  \"type\": \"integer\"",
							"                },",
							"                \"sellerVatNo\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"baseAmount\": {",
							"                  \"type\": \"integer\"",
							"                },",
							"                \"vatCode\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"transType\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"taxableTransactionT1\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"posT1\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"exemptionDescriptionT1\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"obligationToPayT1\": {",
							"                  \"type\": \"string\"",
							"                },",
							"                \"rateT1\": {",
							"                  \"type\": \"integer\"",
							"                },",
							"                \"vatAmount\": {",
							"                  \"type\": \"integer\"",
							"                },",
							"                \"calculatedRate\": {",
							"                  \"type\": \"integer\"",
							"                },",
							"                \"vatBoxes\": {",
							"                  \"type\": \"array\",",
							"                  \"items\": [",
							"                    {",
							"                      \"type\": \"object\",",
							"                      \"properties\": {",
							"                        \"country\": {",
							"                          \"type\": \"string\"",
							"                        },",
							"                        \"box\": {",
							"                          \"type\": \"string\"",
							"                        },",
							"                        \"value\": {",
							"                          \"type\": \"integer\"",
							"                        }",
							"                      },",
							"                      \"required\": [",
							"                        \"country\",",
							"                        \"box\",",
							"                        \"value\"",
							"                      ]",
							"                    }",
							"                  ]",
							"                }",
							"              },",
							"              \"required\": []",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"_id\",",
							"            \"docNumber\",",
							"            \"docDate\",",
							"            \"auditResult\",",
							"            \"analysisResult\"",
							"          ]",
							"        }",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"transactions\"",
							"  ]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_ROOT}}/v1/auditor/vat/audits/{{AUDIT_ID}}/results?pageSize=20&startAfter=",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"auditor",
						"vat",
						"audits",
						"{{AUDIT_ID}}",
						"results"
					],
					"query": [
						{
							"key": "pageSize",
							"value": "20",
							"description": "Number of transactions to return in response, max value 1000"
						},
						{
							"key": "startAfter",
							"value": "",
							"description": "The id of the transaction at the end of the previous results page. \nDon't send the param to get the first page"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Audits - list latest 100 - most recent first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = { ",
							"    \"type\": \"array\", ",
							"    \"items\": {",
							"        \"type\": \"object\",",
							"         \"properties\": {",
							"            \"_id\": {",
							"            \"type\": \"string\"",
							"            },",
							"            \"entryDateTime\": {",
							"            \"type\": \"string\"",
							"            },",
							"            \"dataSourceName\": {",
							"            \"type\": \"string\"",
							"            },",
							"            \"mappingName\": {",
							"            \"type\": \"string\"",
							"            },",
							"            \"dataSource\": {",
							"            \"type\": \"string\"",
							"            },",
							"            \"status\": {",
							"            \"type\": \"string\"",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_ROOT}}/v1/auditor/vat/audits/",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"auditor",
						"vat",
						"audits",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Audit by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AUTH_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{API_ROOT}}/v1/auditor/vat/audits/{{AUDIT_ID}}",
					"host": [
						"{{API_ROOT}}"
					],
					"path": [
						"v1",
						"auditor",
						"vat",
						"audits",
						"{{AUDIT_ID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "AUTH_TOKEN",
			"value": ""
		},
		{
			"key": "ID",
			"value": ""
		},
		{
			"key": "OPERATION_ID",
			"value": ""
		},
		{
			"key": "AUDIT_HREF",
			"value": ""
		},
		{
			"key": "AUDIT_ID",
			"value": ""
		}
	]
}